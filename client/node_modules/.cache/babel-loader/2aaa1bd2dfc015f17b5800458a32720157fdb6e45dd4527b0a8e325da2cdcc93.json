{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amaur\\\\Desktop\\\\myWeb\\\\Foodcare\\\\client\\\\src\\\\routes\\\\category.jsx\",\n  _s = $RefreshSig$();\nimport { useContext, useState, useEffect, Fragment } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { CategoriesContext } from '../context/categories.context';\nimport { ProductCard } from '../components/product-card';\nimport '../styles/category.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Category = () => {\n  _s();\n  let {\n    category\n  } = useParams();\n  const {\n    categoriesData\n  } = useContext(CategoriesContext);\n  const [products, setProducts] = useState(categoriesData);\n  const [imageList, setImageList] = useState([]);\n  const noProductsMessage = /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"category-text\",\n    children: \"Il n'y a pas de produits \\xE0 vendre pour le moment.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 31\n  }, this);\n  useEffect(() => {\n    setProducts(categoriesData);\n  }, [category, categoriesData]);\n  console.log(products);\n  function removeAccents(str) {\n    return str.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\n  }\n  category = removeAccents(category.toLowerCase());\n  useEffect(() => {\n    const fetchImages = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/images_names');\n        if (response.ok) {\n          const data = await response.json();\n          setImageList(data.images);\n        } else {\n          console.error('Error fetching images:', response.status);\n        }\n      } catch (error) {\n        console.error('Error fetching images:', error);\n      }\n    };\n    fetchImages();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"category-title\",\n      children: category.toUpperCase()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category-container product-container\",\n      children: !products || !products.length ? noProductsMessage : products.filter(product => product.category === category.toLowerCase()).map(product => /*#__PURE__*/_jsxDEV(ProductCard, {\n        product: product,\n        category: category,\n        image_list: imageList\n      }, product.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(Category, \"apcfq2EmW4CS221YQk49JWsUR3k=\", false, function () {\n  return [useParams];\n});\n_c = Category;\nvar _c;\n$RefreshReg$(_c, \"Category\");","map":{"version":3,"names":["useContext","useState","useEffect","Fragment","useParams","CategoriesContext","ProductCard","jsxDEV","_jsxDEV","Category","_s","category","categoriesData","products","setProducts","imageList","setImageList","noProductsMessage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","console","log","removeAccents","str","normalize","replace","toLowerCase","fetchImages","response","fetch","ok","data","json","images","error","status","toUpperCase","length","filter","product","map","image_list","id","_c","$RefreshReg$"],"sources":["C:/Users/amaur/Desktop/myWeb/Foodcare/client/src/routes/category.jsx"],"sourcesContent":["import { useContext, useState, useEffect, Fragment } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { CategoriesContext } from '../context/categories.context';\r\nimport { ProductCard } from '../components/product-card';\r\nimport '../styles/category.scss';\r\n\r\nexport const Category = () => {\r\n    let { category } = useParams();\r\n    const { categoriesData } = useContext(CategoriesContext);\r\n    const [products, setProducts] = useState(categoriesData);\r\n    const [imageList, setImageList] = useState([]);\r\n    const noProductsMessage = <p className=\"category-text\">Il n'y a pas de produits Ã  vendre pour le moment.</p>;\r\n\r\n    useEffect( () => {\r\n        setProducts(categoriesData);\r\n    }, [category, categoriesData])\r\n  console.log(products);\r\n    function removeAccents(str) {\r\n        return str.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\r\n    }\r\n\r\n    category = removeAccents(category.toLowerCase());\r\n\r\n    useEffect(() => {\r\n        const fetchImages = async () => {\r\n          try {\r\n            const response = await fetch('http://localhost:5000/images_names');\r\n            if (response.ok) {\r\n              const data = await response.json();\r\n              setImageList(data.images);\r\n            } else {\r\n              console.error('Error fetching images:', response.status);\r\n            }\r\n          } catch (error) {\r\n            console.error('Error fetching images:', error);\r\n          }\r\n        };\r\n    \r\n        fetchImages();\r\n      }, []);\r\n\r\n    return(\r\n        <Fragment>\r\n        <h2 className='category-title'>{category.toUpperCase()}</h2>\r\n            <div className='category-container product-container'>\r\n                {!products || !products.length ? (\r\n                    noProductsMessage\r\n                ) : (\r\n                    products.filter((product) => product.category === category.toLowerCase()).map((product) => (\r\n                        <ProductCard key={product.id} product={product} category={category} image_list={imageList} />\r\n                    ))\r\n                )}\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}