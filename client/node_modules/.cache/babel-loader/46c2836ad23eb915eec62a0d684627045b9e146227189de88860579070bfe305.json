{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amaur\\\\Desktop\\\\myWeb\\\\Foodcare\\\\client\\\\src\\\\routes\\\\categories-preview.route.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, Fragment, useContext } from 'react';\nimport { CategoryPreview } from '../components/category-preview.component';\nimport { CategoriesContext } from '../context/categories.context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst categoriesFood = [{\n  id: 1,\n  title: \"Protéines\",\n  route: 'shop/proteines'\n}, {\n  id: 2,\n  title: \"Epices\",\n  route: 'shop/epices'\n}, {\n  id: 3,\n  title: \"Légumes\",\n  route: 'shop/légumes'\n}, {\n  id: 4,\n  title: \"Féculents\",\n  route: 'shop/feculents'\n}, {\n  id: 5,\n  title: \"Boissons\",\n  route: 'shop/boissons'\n}, {\n  id: 6,\n  title: \"Nos recettes\",\n  route: 'shop/recettes'\n}];\nexport const CategoriesPreview = () => {\n  _s();\n  const [categories, setCategories] = useState(categoriesFood);\n  const [productsByCategory, setProducts] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:5000/products').then(response => response.json()).then(data => setProducts(data));\n  }, []);\n  useEffect(() => {\n    setCategories(categoriesFood);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: categories.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(CategoryPreview, {\n        title: item.title,\n        categories: categories\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 24\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(CategoriesPreview, \"/wZmSxmyZnPYxHatyfGEwKMMi3k=\");\n_c = CategoriesPreview;\nvar _c;\n$RefreshReg$(_c, \"CategoriesPreview\");","map":{"version":3,"names":["useState","useEffect","Fragment","useContext","CategoryPreview","CategoriesContext","jsxDEV","_jsxDEV","categoriesFood","id","title","route","CategoriesPreview","_s","categories","setCategories","productsByCategory","setProducts","fetch","then","response","json","data","children","map","item","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/amaur/Desktop/myWeb/Foodcare/client/src/routes/categories-preview.route.jsx"],"sourcesContent":["import { useState, useEffect, Fragment, useContext } from 'react';\r\nimport { CategoryPreview } from '../components/category-preview.component';\r\nimport { CategoriesContext } from '../context/categories.context';\r\nconst categoriesFood = [\r\n    { id: 1, title: \"Protéines\", route: 'shop/proteines' },\r\n\r\n    { id: 2, title: \"Epices\", route:'shop/epices' },\r\n\r\n    { id: 3, title: \"Légumes\", route: 'shop/légumes' },\r\n\r\n    { id: 4, title: \"Féculents\", route: 'shop/feculents' },\r\n\r\n    { id: 5, title: \"Boissons\", route: 'shop/boissons' },\r\n\r\n    { id: 6, title: \"Nos recettes\", route: 'shop/recettes' },\r\n  ];\r\n\r\nexport const CategoriesPreview = () => {\r\n    const [categories, setCategories] = useState(categoriesFood);\r\n    const [productsByCategory, setProducts] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:5000/products')\r\n            .then((response) => response.json())\r\n            .then((data) => setProducts(data));\r\n    }, []);\r\n\r\n    useEffect( () => {\r\n        setCategories(categoriesFood);\r\n    },[])\r\n\r\n    return (\r\n        <Fragment>\r\n            {categories.map((item, index) =>{\r\n                return <CategoryPreview key={index} title={item.title} categories={categories} />\r\n            })}\r\n        </Fragment>\r\n    );\r\n};\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AACjE,SAASC,eAAe,QAAQ,0CAA0C;AAC1E,SAASC,iBAAiB,QAAQ,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAClE,MAAMC,cAAc,GAAG,CACnB;EAAEC,EAAE,EAAE,CAAC;EAAEC,KAAK,EAAE,WAAW;EAAEC,KAAK,EAAE;AAAiB,CAAC,EAEtD;EAAEF,EAAE,EAAE,CAAC;EAAEC,KAAK,EAAE,QAAQ;EAAEC,KAAK,EAAC;AAAc,CAAC,EAE/C;EAAEF,EAAE,EAAE,CAAC;EAAEC,KAAK,EAAE,SAAS;EAAEC,KAAK,EAAE;AAAe,CAAC,EAElD;EAAEF,EAAE,EAAE,CAAC;EAAEC,KAAK,EAAE,WAAW;EAAEC,KAAK,EAAE;AAAiB,CAAC,EAEtD;EAAEF,EAAE,EAAE,CAAC;EAAEC,KAAK,EAAE,UAAU;EAAEC,KAAK,EAAE;AAAgB,CAAC,EAEpD;EAAEF,EAAE,EAAE,CAAC;EAAEC,KAAK,EAAE,cAAc;EAAEC,KAAK,EAAE;AAAgB,CAAC,CACzD;AAEH,OAAO,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAACQ,cAAc,CAAC;EAC5D,MAAM,CAACQ,kBAAkB,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACZiB,KAAK,CAAC,gCAAgC,CAAC,CAClCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKL,WAAW,CAACK,IAAI,CAAC,CAAC;EAC1C,CAAC,EAAE,EAAE,CAAC;EAENrB,SAAS,CAAE,MAAM;IACbc,aAAa,CAACP,cAAc,CAAC;EACjC,CAAC,EAAC,EAAE,CAAC;EAEL,oBACID,OAAA,CAACL,QAAQ;IAAAqB,QAAA,EACJT,UAAU,CAACU,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAI;MAC5B,oBAAOnB,OAAA,CAACH,eAAe;QAAaM,KAAK,EAAEe,IAAI,CAACf,KAAM;QAACI,UAAU,EAAEA;MAAW,GAAjDY,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA8C,CAAC;IACrF,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEnB,CAAC;AAACjB,EAAA,CArBWD,iBAAiB;AAAAmB,EAAA,GAAjBnB,iBAAiB;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}