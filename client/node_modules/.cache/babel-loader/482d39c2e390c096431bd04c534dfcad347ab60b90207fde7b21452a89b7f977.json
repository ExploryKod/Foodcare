{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amaur\\\\Desktop\\\\myWeb\\\\Foodcare\\\\client\\\\src\\\\routes\\\\upload.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Upload = () => {\n  _s();\n  const [uploads, setUploads] = useState([]);\n  const [name, setName] = useState;\n  useEffect(() => {\n    // script.js\n    const form = document.getElementById(\"form\");\n    form.addEventListener(\"submit\", submitForm);\n    const uploadElement = e => {\n      e.preventDefault();\n      const name = document.getElementById(\"name\");\n      const files = document.getElementById(\"files\");\n      const formData = new FormData();\n      formData.append(\"name\", name.value);\n      for (let i = 0; i < files.files.length; i++) {\n        formData.append(\"files\", files.files[i]);\n      }\n      fetch(\"http://localhost:5002/upload_files\", {\n        method: 'POST',\n        body: formData\n        // We avoid specifying headers content-type by ourselve as we let browser set boundary and content-type\n      }).then(res => console.log(res)).catch(err => (\"Error occured\", err));\n    };\n    fetch('http://localhost:5000/products').then(response => response.json()).then(data => setUploads(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"File Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"name\",\n            children: \"Your name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"name\",\n            id: \"name\",\n            placeholder: \"Enter your name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"files\",\n            children: \"Select files\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"files\",\n            type: \"file\",\n            multiple: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"submit-btn\",\n          type: \"submit\",\n          onClick: uploadElement,\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(Upload, \"hVkHoU5567OaEmnm8a6pvyj4unc=\");\n_c = Upload;\nexport default Upload;\nvar _c;\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Upload","_s","uploads","setUploads","name","setName","form","document","getElementById","addEventListener","submitForm","uploadElement","e","preventDefault","files","formData","FormData","append","value","i","length","fetch","method","body","then","res","console","log","catch","err","response","json","data","children","class","fileName","_jsxFileName","lineNumber","columnNumber","id","for","placeholder","type","multiple","onClick","_c","$RefreshReg$"],"sources":["C:/Users/amaur/Desktop/myWeb/Foodcare/client/src/routes/upload.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nconst Upload = () => {\r\n    const [uploads, setUploads] = useState([]);\r\n    const [name, setName] =useState\r\n\r\n    useEffect(() => {\r\n\r\n        // script.js\r\nconst form = document.getElementById(\"form\");\r\n\r\nform.addEventListener(\"submit\", submitForm);\r\n\r\nconst uploadElement = (e) => {\r\n    e.preventDefault();\r\n    const name = document.getElementById(\"name\");\r\n    const files = document.getElementById(\"files\");\r\n    const formData = new FormData();\r\n    formData.append(\"name\", name.value);\r\n    for(let i =0; i < files.files.length; i++) {\r\n            formData.append(\"files\", files.files[i]);\r\n    }\r\n    fetch(\"http://localhost:5002/upload_files\", {\r\n        method: 'POST',\r\n        body: formData\r\n        // We avoid specifying headers content-type by ourselve as we let browser set boundary and content-type\r\n    })\r\n        .then((res) => console.log(res))\r\n        .catch((err) => (\"Error occured\", err));\r\n}\r\n\r\n\r\n        fetch('http://localhost:5000/products')\r\n            .then((response) => response.json())\r\n            .then((data) => setUploads(data));\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n        <div class=\"container\">\r\n            <h1>File Upload</h1>\r\n            <form id='form'>\r\n                <div class=\"input-group\">\r\n                    <label for='name'>Your name</label>\r\n                    <input name='name' id='name' placeholder=\"Enter your name\" />\r\n                </div>\r\n                <div class=\"input-group\">\r\n                    <label for='files'>Select files</label>\r\n                    <input id='files' type=\"file\" multiple />\r\n                </div>\r\n                <button class=\"submit-btn\" type='submit' onClick={uploadElement}>Upload</button>\r\n        </form>\r\n    </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Upload;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}