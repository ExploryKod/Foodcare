{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amaur\\\\Desktop\\\\myWeb\\\\Foodcare\\\\client\\\\src\\\\context\\\\cart.context.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst addCartItem = (cartItems, productToAdd) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === productToAdd.id);\n  if (existingCartItem) {\n    return cartItems.map(cartItem => cartItem.id === productToAdd.id ? {\n      ...cartItem,\n      quantity: cartItem.quantity + 1\n    } : cartItem);\n  }\n  ;\n  return [...cartItems, {\n    ...productToAdd,\n    quantity: 1\n  }];\n};\nconst removeCartItem = (cartItems, productToRemove) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === productToRemove.id);\n  if (existingCartItem.quantity === 1) {\n    // If the quantity of the existing cart item is 1, remove it from the cart\n    return cartItems.filter(cartItem => cartItem.id !== productToRemove.id);\n  } else {\n    // Otherwise, decrement the quantity of the existing cart item by 1\n    return cartItems.map(cartItem => cartItem.id === productToRemove.id ? {\n      ...cartItem,\n      quantity: cartItem.quantity - 1\n    } : cartItem);\n  }\n};\nexport const CartContext = /*#__PURE__*/createContext({\n  isCartOpen: false,\n  setIsCartOpen: () => {},\n  cartItems: [],\n  addItemToCart: () => {},\n  removeItemFromCart: () => {},\n  cartCount: 0,\n  total: 0\n});\nexport const CartProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [isCartOpen, setIsCartOpen] = useState(false);\n  const [cartItems, setCartItems] = useState([]);\n  const [cartCount, setCartCount] = useState(0);\n  const [cartTotal, setCartTotal] = useState(0);\n  useEffect(() => {\n    const newCartCount = cartItems.reduce((total, cartItem) => total + cartItem.quantity, 0);\n    setCartCount(newCartCount);\n  }, [cartItems]);\n  useEffect(() => {\n    const newCartTotal = cartItems.reduce((total, cartItem) => total + cartItem.quantity * cartItem.price, 0);\n    setCartTotal(newCartTotal);\n  }, [cartItems]);\n  const addItemToCart = productToAdd => {\n    setCartItems(addCartItem(cartItems, productToAdd));\n  };\n  const removeItemFromCart = productToRemove => {\n    setCartItems(removeCartItem(cartItems, productToRemove));\n  };\n  const value = {\n    isCartOpen,\n    setIsCartOpen,\n    addItemToCart,\n    removeItemFromCart,\n    cartItems,\n    cartCount,\n    cartTotal\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n};\n_s(CartProvider, \"Q34pEVQNnwOC1WPCa5SwU/+yuyE=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["useEffect","createContext","useState","jsxDEV","_jsxDEV","addCartItem","cartItems","productToAdd","existingCartItem","find","cartItem","id","map","quantity","removeCartItem","productToRemove","filter","CartContext","isCartOpen","setIsCartOpen","addItemToCart","removeItemFromCart","cartCount","total","CartProvider","_ref","_s","children","setCartItems","setCartCount","cartTotal","setCartTotal","newCartCount","reduce","newCartTotal","price","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/amaur/Desktop/myWeb/Foodcare/client/src/context/cart.context.jsx"],"sourcesContent":["import { useEffect } from \"react\";\r\nimport { createContext, useState } from \"react\";\r\n\r\nconst addCartItem = (cartItems, productToAdd) => {\r\n\r\n    const existingCartItem = cartItems.find(\r\n        (cartItem) => cartItem.id === productToAdd.id);\r\n\r\n    if (existingCartItem) {\r\n        return cartItems.map((cartItem) =>\r\n            cartItem.id === productToAdd.id\r\n                ? { ...cartItem, quantity: cartItem.quantity + 1 }\r\n                : cartItem);\r\n    };\r\n\r\n    return [...cartItems, { ...productToAdd, quantity: 1 }];\r\n};\r\n\r\nconst removeCartItem = (cartItems, productToRemove) => {\r\n    const existingCartItem = cartItems.find(\r\n        (cartItem) => cartItem.id === productToRemove.id\r\n    );\r\n\r\n    if (existingCartItem.quantity === 1) {\r\n        // If the quantity of the existing cart item is 1, remove it from the cart\r\n        return cartItems.filter((cartItem) => cartItem.id !== productToRemove.id);\r\n    } else {\r\n        // Otherwise, decrement the quantity of the existing cart item by 1\r\n        return cartItems.map((cartItem) =>\r\n            cartItem.id === productToRemove.id\r\n                ? { ...cartItem, quantity: cartItem.quantity - 1 }\r\n                : cartItem\r\n        );\r\n    }\r\n};\r\n\r\nexport const CartContext = createContext({\r\n    isCartOpen: false,\r\n    setIsCartOpen: () => { },\r\n    cartItems: [],\r\n    addItemToCart: () => { },\r\n    removeItemFromCart: () =>  { },\r\n    cartCount: 0,\r\n    total: 0\r\n});\r\n\r\nexport const CartProvider = ({ children }) => {\r\n\r\n    const [isCartOpen, setIsCartOpen] = useState(false);\r\n    const [cartItems, setCartItems] = useState([]);\r\n    const [cartCount, setCartCount] = useState(0);\r\n    const [cartTotal, setCartTotal] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const newCartCount = cartItems.reduce(\r\n            (total, cartItem) => total + cartItem.quantity, 0);\r\n\r\n        setCartCount(newCartCount);\r\n    }, [cartItems]);\r\n\r\n    useEffect(() => {\r\n        const newCartTotal = cartItems.reduce(\r\n            (total, cartItem) => total + cartItem.quantity * cartItem.price, 0);\r\n\r\n        setCartTotal(newCartTotal);\r\n    }, [cartItems]);\r\n    \r\n    const addItemToCart = (productToAdd) => {\r\n        setCartItems(addCartItem(cartItems, productToAdd))\r\n    }\r\n\r\n    const removeItemFromCart = (productToRemove) => {\r\n        setCartItems(removeCartItem(cartItems, productToRemove));\r\n    };\r\n\r\n\r\n    const value = {\r\n        isCartOpen,\r\n        setIsCartOpen,\r\n        addItemToCart,\r\n        removeItemFromCart,\r\n        cartItems,\r\n        cartCount,\r\n        cartTotal,\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <CartContext.Provider value={value}>{children}</CartContext.Provider>\r\n    )\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}