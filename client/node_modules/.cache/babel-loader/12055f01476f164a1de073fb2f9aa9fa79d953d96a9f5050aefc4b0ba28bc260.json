{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amaur\\\\Desktop\\\\myWeb\\\\Foodcare\\\\client\\\\src\\\\components\\\\product-card.jsx\",\n  _s = $RefreshSig$();\nimport { useContext, useState, useEffect } from 'react';\nimport '../styles/product-card.scss';\nimport Button from './button';\nimport { CartContext } from '../context/cart.context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ProductCard = _ref => {\n  _s();\n  let {\n    product,\n    category\n  } = _ref;\n  let {\n    product_name,\n    product_price\n  } = product;\n  const [imageList, setImageList] = useState([]);\n  const {\n    addItemToCart\n  } = useContext(CartContext);\n  const addProductToCart = () => addItemToCart(product);\n  useEffect(() => {\n    const fetchImages = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/images_names');\n        if (response.ok) {\n          const data = await response.json();\n          setImageList(data.images);\n        } else {\n          console.error('Error fetching images:', response.status);\n        }\n      } catch (error) {\n        console.error('Error fetching images:', error);\n      }\n    };\n    fetchImages();\n  }, []);\n  product_name = product_name.toLowerCase();\n  const imageExtensionsRegex = /\\.(jpg|jpeg|png)$/i; // Regex to match jpg, jpeg, or png extensions\n  let imageUrl = `http://localhost:5000/uploads/${category}_${product_name}`;\n  if (imageExtensionsRegex.test()) {}\n  imageUrl = `http://localhost:5000/uploads/${category}_${product_name}.${ext}`;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `product-card-container card-${product_name}`,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: imageUrl,\n        alt: `${product_name}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"name\",\n          children: product_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"price\",\n          children: [product_price, \"\\u20AC\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: addProductToCart,\n        children: \"Choisir\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(ProductCard, \"XSa57MDwHUjcJxZ66bGGQS9SP+c=\");\n_c = ProductCard;\nexport default ProductCard;\nvar _c;\n$RefreshReg$(_c, \"ProductCard\");","map":{"version":3,"names":["useContext","useState","useEffect","Button","CartContext","jsxDEV","_jsxDEV","Fragment","_Fragment","ProductCard","_ref","_s","product","category","product_name","product_price","imageList","setImageList","addItemToCart","addProductToCart","fetchImages","response","fetch","ok","data","json","images","console","error","status","toLowerCase","imageExtensionsRegex","imageUrl","test","ext","children","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/amaur/Desktop/myWeb/Foodcare/client/src/components/product-card.jsx"],"sourcesContent":["import { useContext, useState, useEffect } from 'react';\r\nimport '../styles/product-card.scss';\r\nimport Button from './button';\r\nimport { CartContext } from '../context/cart.context';\r\n\r\nexport const ProductCard = ({ product, category }) => {\r\n    let { product_name, product_price } = product;\r\n    const [imageList, setImageList] = useState([]);\r\n    const { addItemToCart } = useContext(CartContext);\r\n    \r\n    const addProductToCart = () => addItemToCart(product);\r\n\r\n    useEffect(() => {\r\n      const fetchImages = async () => {\r\n        try {\r\n          const response = await fetch('http://localhost:5000/images_names');\r\n          if (response.ok) {\r\n            const data = await response.json();\r\n            setImageList(data.images);\r\n          } else {\r\n            console.error('Error fetching images:', response.status);\r\n          }\r\n        } catch (error) {\r\n          console.error('Error fetching images:', error);\r\n        }\r\n      };\r\n  \r\n      fetchImages();\r\n    }, []);\r\n\r\n    product_name = product_name.toLowerCase();\r\n    const imageExtensionsRegex = /\\.(jpg|jpeg|png)$/i; // Regex to match jpg, jpeg, or png extensions\r\n    let imageUrl = `http://localhost:5000/uploads/${category}_${product_name}`\r\n\r\n    if(imageExtensionsRegex.test()) {\r\n\r\n    }\r\n\r\n    imageUrl = `http://localhost:5000/uploads/${category}_${product_name}.${ext}`;\r\n  \r\n \r\n    return (\r\n        <>\r\n        <div className={`product-card-container card-${product_name}`}>\r\n        {/* {imageList.filter((image, index) => category === image.split('_')[0]).map((image, index) => (\r\n        <img height={50} key={index} src={`http://localhost:5000/uploads/${image}`} alt={`${index}`} />\r\n      ))} */}\r\n\r\n            <img src={imageUrl} alt={`${product_name}`} />\r\n            <div className='footer'>\r\n                <span className='name'>{product_name}</span>\r\n                <span className='price'>{product_price}â‚¬</span>\r\n            </div>\r\n            <Button onClick={addProductToCart}>Choisir</Button>\r\n        </div></>);\r\n\r\n}\r\n\r\nexport default ProductCard;\r\n"],"mappings":";;AAAA,SAASA,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACvD,OAAO,6BAA6B;AACpC,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,WAAW,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEtD,OAAO,MAAMC,WAAW,GAAGC,IAAA,IAA2B;EAAAC,EAAA;EAAA,IAA1B;IAAEC,OAAO;IAAEC;EAAS,CAAC,GAAAH,IAAA;EAC7C,IAAI;IAAEI,YAAY;IAAEC;EAAc,CAAC,GAAGH,OAAO;EAC7C,MAAM,CAACI,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM;IAAEiB;EAAc,CAAC,GAAGlB,UAAU,CAACI,WAAW,CAAC;EAEjD,MAAMe,gBAAgB,GAAGA,CAAA,KAAMD,aAAa,CAACN,OAAO,CAAC;EAErDV,SAAS,CAAC,MAAM;IACd,MAAMkB,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,CAAC;QAClE,IAAID,QAAQ,CAACE,EAAE,EAAE;UACf,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;UAClCR,YAAY,CAACO,IAAI,CAACE,MAAM,CAAC;QAC3B,CAAC,MAAM;UACLC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEP,QAAQ,CAACQ,MAAM,CAAC;QAC1D;MACF,CAAC,CAAC,OAAOD,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;IAEDR,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAENN,YAAY,GAAGA,YAAY,CAACgB,WAAW,CAAC,CAAC;EACzC,MAAMC,oBAAoB,GAAG,oBAAoB,CAAC,CAAC;EACnD,IAAIC,QAAQ,GAAI,iCAAgCnB,QAAS,IAAGC,YAAa,EAAC;EAE1E,IAAGiB,oBAAoB,CAACE,IAAI,CAAC,CAAC,EAAE,CAEhC;EAEAD,QAAQ,GAAI,iCAAgCnB,QAAS,IAAGC,YAAa,IAAGoB,GAAI,EAAC;EAG7E,oBACI5B,OAAA,CAAAE,SAAA;IAAA2B,QAAA,eACA7B,OAAA;MAAK8B,SAAS,EAAG,+BAA8BtB,YAAa,EAAE;MAAAqB,QAAA,gBAK1D7B,OAAA;QAAK+B,GAAG,EAAEL,QAAS;QAACM,GAAG,EAAG,GAAExB,YAAa;MAAE;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC9CpC,OAAA;QAAK8B,SAAS,EAAC,QAAQ;QAAAD,QAAA,gBACnB7B,OAAA;UAAM8B,SAAS,EAAC,MAAM;UAAAD,QAAA,EAAErB;QAAY;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC5CpC,OAAA;UAAM8B,SAAS,EAAC,OAAO;UAAAD,QAAA,GAAEpB,aAAa,EAAC,QAAC;QAAA;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC,eACNpC,OAAA,CAACH,MAAM;QAACwC,OAAO,EAAExB,gBAAiB;QAAAgB,QAAA,EAAC;MAAO;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD;EAAC,gBAAE,CAAC;AAEjB,CAAC;AAAA/B,EAAA,CAnDYF,WAAW;AAAAmC,EAAA,GAAXnC,WAAW;AAqDxB,eAAeA,WAAW;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}