{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amaur\\\\Desktop\\\\myWeb\\\\Foodcare\\\\client\\\\src\\\\routes\\\\categories-preview.route.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, Fragment, useContext } from 'react';\nimport { CategoryPreview } from '../components/category-preview.component';\nimport { CategoriesContext } from '../context/categories.context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst categoriesFood = [{\n  id: 1,\n  title: \"Protéines\",\n  route: 'shop/proteines'\n}, {\n  id: 2,\n  title: \"Epices\",\n  route: 'shop/epices'\n}, {\n  id: 3,\n  title: \"Légumes\",\n  route: 'shop/légumes'\n}, {\n  id: 4,\n  title: \"Féculents\",\n  route: 'shop/feculents'\n}, {\n  id: 5,\n  title: \"Boissons\",\n  route: 'shop/boissons'\n}, {\n  id: 6,\n  title: \"Nos recettes\",\n  route: 'shop/recettes'\n}];\nexport const CategoriesPreview = () => {\n  _s();\n  const [categories, setCategories] = useState(categoriesFood);\n  const [productsByCategory, setProductsByCategory] = useState([]);\n  let category = 'fruits';\n  useEffect(() => {\n    const fetchProductByCategory = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/products/${category}`);\n        if (response.ok) {\n          const data = await response.text();\n          setProductsByCategory(data);\n        } else {\n          console.error('Error fetching product by category:', response.status);\n        }\n      } catch (error) {\n        console.error('Error fetching product by category:', error);\n      }\n    };\n    fetchProductByCategory();\n  }, [category]);\n  useEffect(() => {\n    setCategories(categoriesFood);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: productsBy.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: product.product_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Category: \", product.category]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Price: \", product.product_price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, product.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(CategoriesPreview, \"1zpqYinMx2iC9wUXgx8ROyMAWr0=\");\n_c = CategoriesPreview;\nvar _c;\n$RefreshReg$(_c, \"CategoriesPreview\");","map":{"version":3,"names":["useState","useEffect","Fragment","useContext","CategoryPreview","CategoriesContext","jsxDEV","_jsxDEV","categoriesFood","id","title","route","CategoriesPreview","_s","categories","setCategories","productsByCategory","setProductsByCategory","category","fetchProductByCategory","response","fetch","ok","data","text","console","error","status","children","productsBy","map","product","product_name","fileName","_jsxFileName","lineNumber","columnNumber","product_price","_c","$RefreshReg$"],"sources":["C:/Users/amaur/Desktop/myWeb/Foodcare/client/src/routes/categories-preview.route.jsx"],"sourcesContent":["import { useState, useEffect, Fragment, useContext } from 'react';\r\nimport { CategoryPreview } from '../components/category-preview.component';\r\nimport { CategoriesContext } from '../context/categories.context';\r\nconst categoriesFood = [\r\n    { id: 1, title: \"Protéines\", route: 'shop/proteines' },\r\n\r\n    { id: 2, title: \"Epices\", route:'shop/epices' },\r\n\r\n    { id: 3, title: \"Légumes\", route: 'shop/légumes' },\r\n\r\n    { id: 4, title: \"Féculents\", route: 'shop/feculents' },\r\n\r\n    { id: 5, title: \"Boissons\", route: 'shop/boissons' },\r\n\r\n    { id: 6, title: \"Nos recettes\", route: 'shop/recettes' },\r\n  ];\r\n\r\nexport const CategoriesPreview = () => {\r\n    const [categories, setCategories] = useState(categoriesFood);\r\n    const [productsByCategory, setProductsByCategory] = useState([]);\r\n    let category = 'fruits';\r\n\r\n    useEffect(() => {\r\n        const fetchProductByCategory = async () => {\r\n          try {\r\n            const response = await fetch(`http://localhost:5000/products/${category}`);\r\n            if (response.ok) {\r\n              const data = await response.text();\r\n              setProductsByCategory(data)\r\n            } else {\r\n              console.error('Error fetching product by category:', response.status);\r\n            }\r\n          } catch (error) {\r\n            console.error('Error fetching product by category:', error);\r\n          }\r\n        };\r\n    \r\n        fetchProductByCategory();\r\n      }, [category]);\r\n\r\n   \r\n\r\n    useEffect( () => {\r\n        setCategories(categoriesFood);\r\n    },[])\r\n\r\n    return (\r\n        <Fragment>\r\n                <div>\r\n      {productsBy.map((product) => (\r\n        <div key={product.id}>\r\n          <h2>{product.product_name}</h2>\r\n          <p>Category: {product.category}</p>\r\n          <p>Price: {product.product_price}</p>\r\n          {/* Additional rendering logic */}\r\n        </div>\r\n      ))}\r\n    </div>\r\n            {/* {categories.map((item, index) =>{\r\n                return <CategoryPreview key={index} title={item.title} categories={categories} />\r\n            })} */}\r\n        </Fragment>\r\n    );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}