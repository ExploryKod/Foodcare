{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amaur\\\\Desktop\\\\myWeb\\\\Foodcare\\\\client\\\\src\\\\components\\\\imageList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageGallery = () => {\n  _s();\n  const [imageList, setImageList] = useState([]);\n  useEffect(() => {\n    const fetchImages = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/images_names');\n        if (response.ok) {\n          const data = await response.json();\n          setImageList(data.images);\n        } else {\n          console.error('Error fetching images:', response.status);\n        }\n      } catch (error) {\n        console.error('Error fetching images:', error);\n      }\n    };\n    fetchImages();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-image-gallery\",\n    children: imageList.map((image, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `http://localhost:5000/uploads/${image}`,\n      alt: `${index}`\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageGallery, \"Q0Vs3QOxZ+1eqbd3cAgE4GWR8QU=\");\n_c = ImageGallery;\nexport default ImageGallery;\nvar _c;\n$RefreshReg$(_c, \"ImageGallery\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","ImageGallery","_s","imageList","setImageList","fetchImages","response","fetch","ok","data","json","images","console","error","status","className","children","map","image","index","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/amaur/Desktop/myWeb/Foodcare/client/src/components/imageList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst ImageGallery = () => {\r\n  const [imageList, setImageList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchImages = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/images_names');\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setImageList(data.images);\r\n        } else {\r\n          console.error('Error fetching images:', response.status);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching images:', error);\r\n      }\r\n    };\r\n\r\n    fetchImages();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"upload-image-gallery\">\r\n      {imageList.map((image, index) => (\r\n        <img key={index} src={`http://localhost:5000/uploads/${image}`} alt={`${index}`} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageGallery;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACd,MAAMQ,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,CAAC;QAClE,IAAID,QAAQ,CAACE,EAAE,EAAE;UACf,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;UAClCN,YAAY,CAACK,IAAI,CAACE,MAAM,CAAC;QAC3B,CAAC,MAAM;UACLC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEP,QAAQ,CAACQ,MAAM,CAAC;QAC1D;MACF,CAAC,CAAC,OAAOD,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;IAEDR,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAKe,SAAS,EAAC,sBAAsB;IAAAC,QAAA,EAClCb,SAAS,CAACc,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBAC1BnB,OAAA;MAAiBoB,GAAG,EAAG,iCAAgCF,KAAM,EAAE;MAACG,GAAG,EAAG,GAAEF,KAAM;IAAE,GAAtEA,KAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAmE,CACnF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACvB,EAAA,CA5BID,YAAY;AAAAyB,EAAA,GAAZzB,YAAY;AA8BlB,eAAeA,YAAY;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}